---
import { ClientRouter } from "astro:transitions";
import { Toaster } from "react-hot-toast";
import { ThemeProvider } from "@/components/ThemeProvider";
import { ThemeController } from "@/components/ThemeController";
import { getOrCreateCsrfToken } from "@/lib/server/csrf.service";
import "@/styles/global.css";
import i18next from "i18next";

interface Props {
  title: string;
}

const { title } = Astro.props;
const { user } = Astro.locals;

// Get CSRF token for forms (only needed if user is authenticated)
const csrfToken = user ? getOrCreateCsrfToken(Astro.cookies) : null;

// Get current locale for translations
const locale = Astro.params.locale || "en-US";
---

<!doctype html>
<html lang={locale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ClientRouter />
    <script is:inline>
      /* eslint-disable */
      // Initialize theme from localStorage before page renders to prevent flash
      try {
        const theme = localStorage.getItem("theme");
        if (theme) {
          document.documentElement.setAttribute("data-theme", theme);
        } else {
          // Set default theme based on system preference
          const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
          const defaultTheme = prefersDark ? "dark" : "light";
          document.documentElement.setAttribute("data-theme", defaultTheme);
        }
      } catch (_e) {
        // Ignore localStorage errors and set light as fallback
        document.documentElement.setAttribute("data-theme", "light");
      }
    </script>
  </head>
  <body>
    <ThemeProvider userTheme={user?.profile?.theme} client:load>
      <header class="bg-base-100 border-b border-base-300">
        <nav class="container mx-auto flex justify-between items-center p-4">
          <a href={`/${locale}`} class="text-xl font-bold text-base-content">{i18next.t("layout.siteName")}</a>
          <div class="flex items-center gap-4">
            <ThemeController client:load />
            {
              user ? (
                <div class="flex items-center gap-4">
                  <span class="text-base-content">
                    {i18next.t("layout.welcome", { name: user.profile.display_name || user.email })}
                  </span>
                  <form action="/api/auth/signout" method="post" data-astro-reload>
                    <input type="hidden" name="csrf_token" value={csrfToken} />
                    <button type="submit" class="btn btn-error btn-sm">
                      {i18next.t("layout.logout")}
                    </button>
                  </form>
                </div>
              ) : (
                <a href={`/${locale}/login`} class="btn btn-primary btn-sm">
                  {i18next.t("layout.login")}
                </a>
              )
            }
          </div>
        </nav>
      </header>
      <main class="container mx-auto p-4">
        <Toaster />
        <slot />
      </main>
    </ThemeProvider>
  </body>
</html>
